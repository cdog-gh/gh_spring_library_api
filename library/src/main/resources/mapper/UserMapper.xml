<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.library.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.library.model.User.User">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pw" jdbcType="VARCHAR" property="userPw" />
    <result column="user_role_name" jdbcType="VARCHAR" property="userRoleName" />
    <result column="user_auth" jdbcType="BIT" property="userAuth" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.library.model.User.User"
          useGeneratedKeys="true" keyProperty="userId">
    insert into public.user (user_email, user_name,
    user_pw, user_role_name, user_auth
    )
    values (#{userEmail,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
    #{userPw,jdbcType=VARCHAR}, 'ROLE_USER', true
    )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.library.model.User.User">
    update user
    set user_email = #{userEmail,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_pw = #{userPw,jdbcType=VARCHAR},
      user_role_name = #{userRoleName,jdbcType=VARCHAR},
      user_auth = #{userAuth,jdbcType=BIT}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_id, user_name, user_pw, user_role_name
    from public.user
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select user_id, user_email, user_name, user_pw, user_role_name, user_auth
    from user
  </select>
</mapper>